{
  "address": "0x0971BF033F429B6077b81911505c406Ffb8cde2c",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Token",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "bytes4",
          "name": "_method",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "changeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "functionData",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "functionData",
          "type": "bytes"
        }
      ],
      "name": "executeTrusted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "method",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract Token",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Token",
          "name": "withdrawToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "withdrawTokensTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xbfc6f4f4e619b2d89d6b15aead41c6ff33a40622f139daef328ff5410da336ba",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x05c85Ab5B09Eb8A55020d72daf6091E04e264af9",
    "contractAddress": null,
    "transactionIndex": 16,
    "gasUsed": "1095879",
    "logsBloom": "0x
    "blockHash": "0x6b0dd46eb93be3de3a7865b34bea901636ff7bee9062f37eacce6cb57c4c6e43",
    "transactionHash": "0xbfc6f4f4e619b2d89d6b15aead41c6ff33a40622f139daef328ff5410da336ba",
    "logs": [],
    "blockNumber": 8126372,
    "cumulativeGasUsed": "4853812",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xc778417E063141139Fce010982780140Aa0cD5Ab",
    "0x05c85Ab5B09Eb8A55020d72daf6091E04e264af9",
    "1000000000",
    "0x6a761202"
  ],
  "solcInputHash": "bf4dc11de2af1075f49810f2bed7b6d7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Token\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"_method\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"functionData\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"functionData\",\"type\":\"bytes\"}],\"name\":\"executeTrusted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"method\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract Token\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Token\",\"name\":\"withdrawToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"withdrawTokensTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Refunder.sol\":\"Refunder\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Refunder.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity ^0.8.0;\\n\\ninterface Token {\\n    function transferFrom(address from, address to, uint256 value) external returns(bool);\\n    function transfer(address to, uint256 value) external returns(bool);\\n    function balanceOf(address holder) external returns(uint256);\\n}\\n\\ncontract Refunder {\\n    \\n    address public owner;\\n    Token public immutable token;\\n    uint256 public immutable fee;\\n    bytes4 public immutable method;\\n    \\n    constructor(Token _token, address _owner, uint256 _fee, bytes4 _method) {\\n        token = _token;\\n        owner = _owner;\\n        fee = _fee;\\n        method = _method;\\n    }\\n    \\n    function changeOwner(address newOwner) external {\\n        require(msg.sender == owner, \\\"Not Authorized\\\");\\n        owner = newOwner;\\n    }\\n    \\n    function withdrawTokensTo(Token withdrawToken, address target) external {\\n        require(msg.sender == owner, \\\"Not Authorized\\\");\\n        if (address(withdrawToken) == address(0)) {\\n            target.call{ value: address(this).balance }(\\\"\\\");\\n        } else {\\n            withdrawToken.transfer(target, withdrawToken.balanceOf(address(this)));\\n        }\\n    }\\n    \\n    function execute(address target, bytes calldata functionData) external {\\n        // 9k are for the token transfers + 21k base + data (8 bytes method + 32 bytes address + data)\\n        // We will use 14 as the gas price per data byte, to avoid overcharging too much\\n        uint256 additionalGas = 30000 + (40 + functionData.length) * 14;\\n        uint256 gasPrice = tx.gasprice + fee;\\n        require(token.transferFrom(target, address(this), (gasleft() + additionalGas) * gasPrice), \\\"Could not aquire tokens\\\");\\n        // The method id is appended by the contract to avoid that another method is called\\n        bytes memory data = abi.encodePacked(method, functionData);\\n        bool success;\\n        // Assembly reduced the costs by 400 gas\\n        assembly {\\n            success := call(sub(gas(), 12000), target, 0, add(data, 0x20), mload(data), 0, 0)\\n        }\\n        require(success, \\\"Could not successfully call target\\\");\\n        require(token.transfer(target, (gasleft()) * gasPrice), \\\"Could not refund unused gas\\\");\\n    } \\n    \\n    function executeTrusted(address target, bytes calldata functionData) external {\\n        // 9k are for the token transfers + 21k base + data (8 bytes method + 32 bytes address + data)\\n        // We will use 14 as the gas price per data byte, to avoid overcharging too much\\n        uint256 additionalGas = 30000 + (40 + functionData.length) * 14;\\n        uint256 gasPrice = tx.gasprice + fee;\\n        uint256 gasStart = gasleft();\\n        // The method id is appended by the contract to avoid that another method is called\\n        bytes memory data = abi.encodePacked(method, functionData);\\n        bool success;\\n        // Assembly reduced the costs by 400 gas\\n        assembly {\\n            success := call(sub(gas(), 12000), target, 0, add(data, 0x20), mload(data), 0, 0)\\n        }\\n        require(success, \\\"Could not successfully call target\\\");\\n        require(token.transferFrom(target, address(this), (gasStart + additionalGas - gasleft()) * gasPrice), \\\"Could not pay gas\\\");\\n    } \\n}\",\"keccak256\":\"0xb8c2f3c49e38c2b76bc40f6279e8eb6ba6ca572964870b998e2238181b019827\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b506040516200157638038062001576833981810160405281019062000037919062000162565b8373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160a08181525050807bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191660c0817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152505050505050620002b4565b60008151905062000117816200024c565b92915050565b6000815190506200012e8162000266565b92915050565b600081519050620001458162000280565b92915050565b6000815190506200015c816200029a565b92915050565b600080600080608085870312156200017957600080fd5b6000620001898782880162000134565b94505060206200019c8782880162000106565b9350506040620001af878288016200014b565b9250506060620001c2878288016200011d565b91505092959194509250565b6000620001db8262000222565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60006200021b82620001ce565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6200025781620001ce565b81146200026357600080fd5b50565b6200027181620001e2565b81146200027d57600080fd5b50565b6200028b816200020e565b81146200029757600080fd5b50565b620002a58162000242565b8114620002b157600080fd5b50565b60805160601c60a05160c05160e01c60e01b6112586200031e600039600081816102da0152818161047601526104fe0152600081816101a6015281816104c901526107a80152600081816101d4015281816103760152818161059a0152610a1a01526112586000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a6f9dae11161005b578063a6f9dae114610101578063ddca3f431461011d578063e3f6d8841461013b578063fc0c546a1461015757610088565b80631cff79cd1461008d5780632c383a9f146100a957806381086c6e146100c75780638da5cb5b146100e3575b600080fd5b6100a760048036038101906100a29190610b03565b610175565b005b6100b1610474565b6040516100be9190610ded565b60405180910390f35b6100e160048036038101906100dc9190610b03565b610498565b005b6100eb6106b1565b6040516100f89190610d72565b60405180910390f35b61011b60048036038101906101169190610ada565b6106d5565b005b6101256107a6565b6040516101329190610ec3565b60405180910390f35b61015560048036038101906101509190610b84565b6107ca565b005b61015f610a18565b60405161016c9190610e08565b60405180910390f35b6000600e8383905060286101899190610efa565b6101939190610f50565b6175306101a09190610efa565b905060007f00000000000000000000000000000000000000000000000000000000000000003a6101d09190610efa565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd863084865a61021d9190610efa565b6102279190610f50565b6040518463ffffffff1660e01b815260040161024593929190610d8d565b602060405180830381600087803b15801561025f57600080fd5b505af1158015610273573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102979190610b5b565b6102d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cd90610ea3565b60405180910390fd5b60007f0000000000000000000000000000000000000000000000000000000000000000858560405160200161030d93929190610d33565b6040516020818303038152906040529050600080600083516020850160008b612ee05a03f1905080610374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036b90610e43565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb88855a6103bd9190610f50565b6040518363ffffffff1660e01b81526004016103da929190610dc4565b602060405180830381600087803b1580156103f457600080fd5b505af1158015610408573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042c9190610b5b565b61046b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046290610e23565b60405180910390fd5b50505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600e8383905060286104ac9190610efa565b6104b69190610f50565b6175306104c39190610efa565b905060007f00000000000000000000000000000000000000000000000000000000000000003a6104f39190610efa565b905060005a905060007f0000000000000000000000000000000000000000000000000000000000000000868660405160200161053193929190610d33565b6040516020818303038152906040529050600080600083516020850160008c612ee05a03f1905080610598576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058f90610e43565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd8930875a8a896105e49190610efa565b6105ee9190610faa565b6105f89190610f50565b6040518463ffffffff1660e01b815260040161061693929190610d8d565b602060405180830381600087803b15801561063057600080fd5b505af1158015610644573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106689190610b5b565b6106a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069e90610e83565b60405180910390fd5b5050505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610763576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075a90610e63565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610858576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084f90610e63565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108fb578073ffffffffffffffffffffffffffffffffffffffff16476040516108b190610d5d565b60006040518083038185875af1925050503d80600081146108ee576040519150601f19603f3d011682016040523d82523d6000602084013e6108f3565b606091505b505050610a14565b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb828473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109519190610d72565b602060405180830381600087803b15801561096b57600080fd5b505af115801561097f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a39190610bc0565b6040518363ffffffff1660e01b81526004016109c0929190610dc4565b602060405180830381600087803b1580156109da57600080fd5b505af11580156109ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a129190610b5b565b505b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081359050610a4b816111c6565b92915050565b600081519050610a60816111dd565b92915050565b60008083601f840112610a7857600080fd5b8235905067ffffffffffffffff811115610a9157600080fd5b602083019150836001820283011115610aa957600080fd5b9250929050565b600081359050610abf816111f4565b92915050565b600081519050610ad48161120b565b92915050565b600060208284031215610aec57600080fd5b6000610afa84828501610a3c565b91505092915050565b600080600060408486031215610b1857600080fd5b6000610b2686828701610a3c565b935050602084013567ffffffffffffffff811115610b4357600080fd5b610b4f86828701610a66565b92509250509250925092565b600060208284031215610b6d57600080fd5b6000610b7b84828501610a51565b91505092915050565b60008060408385031215610b9757600080fd5b6000610ba585828601610ab0565b9250506020610bb685828601610a3c565b9150509250929050565b600060208284031215610bd257600080fd5b6000610be084828501610ac5565b91505092915050565b610bf281610fde565b82525050565b610c0181610ffc565b82525050565b610c18610c1382610ffc565b611097565b82525050565b6000610c2a8385610ede565b9350610c37838584611088565b82840190509392505050565b610c4c81611064565b82525050565b6000610c5f601b83610ee9565b9150610c6a826110d0565b602082019050919050565b6000610c82602283610ee9565b9150610c8d826110f9565b604082019050919050565b6000610ca5600e83610ee9565b9150610cb082611148565b602082019050919050565b6000610cc8601183610ee9565b9150610cd382611171565b602082019050919050565b6000610ceb601783610ee9565b9150610cf68261119a565b602082019050919050565b6000610d0e600083610ede565b9150610d19826111c3565b600082019050919050565b610d2d8161105a565b82525050565b6000610d3f8286610c07565b600482019150610d50828486610c1e565b9150819050949350505050565b6000610d6882610d01565b9150819050919050565b6000602082019050610d876000830184610be9565b92915050565b6000606082019050610da26000830186610be9565b610daf6020830185610be9565b610dbc6040830184610d24565b949350505050565b6000604082019050610dd96000830185610be9565b610de66020830184610d24565b9392505050565b6000602082019050610e026000830184610bf8565b92915050565b6000602082019050610e1d6000830184610c43565b92915050565b60006020820190508181036000830152610e3c81610c52565b9050919050565b60006020820190508181036000830152610e5c81610c75565b9050919050565b60006020820190508181036000830152610e7c81610c98565b9050919050565b60006020820190508181036000830152610e9c81610cbb565b9050919050565b60006020820190508181036000830152610ebc81610cde565b9050919050565b6000602082019050610ed86000830184610d24565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610f058261105a565b9150610f108361105a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f4557610f446110a1565b5b828201905092915050565b6000610f5b8261105a565b9150610f668361105a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f9f57610f9e6110a1565b5b828202905092915050565b6000610fb58261105a565b9150610fc08361105a565b925082821015610fd357610fd26110a1565b5b828203905092915050565b6000610fe98261103a565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600061103382610fde565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061106f82611076565b9050919050565b60006110818261103a565b9050919050565b82818337600083830152505050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f436f756c64206e6f7420726566756e6420756e75736564206761730000000000600082015250565b7f436f756c64206e6f74207375636365737366756c6c792063616c6c207461726760008201527f6574000000000000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420417574686f72697a6564000000000000000000000000000000000000600082015250565b7f436f756c64206e6f742070617920676173000000000000000000000000000000600082015250565b7f436f756c64206e6f742061717569726520746f6b656e73000000000000000000600082015250565b50565b6111cf81610fde565b81146111da57600080fd5b50565b6111e681610ff0565b81146111f157600080fd5b50565b6111fd81611028565b811461120857600080fd5b50565b6112148161105a565b811461121f57600080fd5b5056fea2646970667358221220775c9354541e3c6a5350184fe46c5ddf661667ddfb45a88206cac4f063c37a9464736f6c63430008010033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 31,
        "contract": "contracts/Refunder.sol:Refunder",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}